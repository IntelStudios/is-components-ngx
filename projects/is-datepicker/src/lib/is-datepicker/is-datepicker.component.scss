@import '../../../../styles/mixins';
@import '../../../../styles/variables';

is-datepicker {
  &.ng-invalid {
    .datepicker-input {
      @include is-input-invalid();
    }

    &:hover {
      @include is-input-invalid();
    }
  }

  .input-group {
    .form-control {
      border-radius: 4px !important;
    }

    .datepicker-input {
      border-width: 1px;
      border-style: solid;
      @include is-input();
      display: flex;
      align-items: center;
      position: relative;
      // cursor: pointer;
      flex: 1;
      outline: 0;
      min-width: 0;
      white-space: nowrap;
      overflow: hidden;

      &.open {
        @include is-input-active;
      }

      &.disabled {
        @include is-input-disabled;
        cursor: not-allowed;
      }

      &.align-left {
        text-align: left !important;
      }

      &.align-center {
        text-align: center !important;
      }

      &.align-right {
        text-align: right !important;
        padding-right: 48px;
      }

      &:not(.disabled):not(.readonly) {
        color: $is-control-fg-color;
      }

      &.ng-invalid {
        @include is-input-invalid();
      }
    }

    // &.datepicker-value {
    //   border: 0;
    //   flex: 1;
    //   outline: 0;
    //   min-width: 0;
    //   background: transparent;
    //   white-space: nowrap;
    //   overflow: hidden;


    // }

    >.btn-remove {
      margin-left: #{$is-general-padding-small};
      color: $is-control-handle-color;
    }
  }

  .datepicker-icon {
    position: absolute;
    right: 8px;
    display: flex;
    // magic numbers dont work well with variable height inputs, position like so
    top: 50%;
    transform: translateY(-50%);

    margin-left: #{$is-general-padding-small};
    z-index: 998;
    cursor: pointer;

    >i {
      color: $is-control-handle-color;
    }

    &.disabled {
      pointer-events: none;
      cursor: not-allowed;
    }
  }

  .datepicker-input.readonly+.datepicker-icon {
    display: none;
  }

  .btn-remove {
    cursor: pointer;
    position: absolute;
    right: 32px;
    // magic numbers dont work well with variable height inputs, position like so
    top: 50%;
    transform: translateY(-50%);
    color: $is-control-handle-color;
  }
}
